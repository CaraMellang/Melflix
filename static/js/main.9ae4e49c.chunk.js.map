{"version":3,"sources":["lib/media.js","routes/Detail.js","components/Movie.js","components/Pagination.js","routes/Home.js","lib/GenreList.js","routes/Genres.js","components/Navigation.js","routes/Rating.js","App.js","reportWebVitals.js","index.js"],"names":["mediaQuery","maxWidth","media","xxlarge","xlarge","large","medium","small","xsmall","xxsmall","custom","Main","styled","div","Detail","props","state","location","console","log","className","src","poster","alt","title","year","style","paddingLeft","genres","map","item","index","display","flexDirection","gap","paddingBottom","runtime","marginBottom","icon","faStar","color","rating","borderBottom","description","Wraper","Link","Content","Header","Movie","id","summary","to","pathname","fontSize","slice","UlWrapper","Ul","ul","Pagination","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","useState","pages","setPages","activeId","setActiveId","onClick","e","parseInt","target","Wrapper","Home","movieList","setMovieList","loading","setLoading","getData","a","axios","get","data","movies","useEffect","description_full","large_cover_image","GenreList","name","value","Genres","genresName","setGenresName","toggle","setToggle","genresData","faBars","prev","toUpperCase","React","memo","NavbarItems","NavLink","Navigation","clickbtn","path","activeClassName","exact","Rating","GlobalStyled","createGlobalStyle","App","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ae4e49c.chunk.js","sourcesContent":["export const mediaQuery = (maxWidth) => `@media(max-width: ${maxWidth}px)`;\r\n\r\nconst media = {\r\n  xxlarge: mediaQuery(1920),// Laptop L\r\n  xlarge: mediaQuery(1440),// Laptop M\r\n  large: mediaQuery(1024),// laptop\r\n  medium: mediaQuery(768),// Tablet\r\n  small: mediaQuery(425),// Mobile L\r\n  xsmall: mediaQuery(375),// Mobile M\r\n  xxsmall: mediaQuery(320),// Mobile S\r\n  custom: mediaQuery,\r\n};\r\n\r\nexport default media;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport media from \"../lib/media\";\r\nimport \"./Detail.css\";\r\nimport { fas, faStar } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Detail = (props) => {\r\n  const {\r\n    location: { state },\r\n  } = props;\r\n  console.log(state);\r\n\r\n  return (\r\n    <>\r\n      <Main>\r\n        <section className=\"header-block\">\r\n          <div className=\"header-contents\">\r\n            <div className=\"thumnail-block\">\r\n              <img\r\n                className=\"poster-img\"\r\n                src={state.poster}\r\n                alt={state.title}\r\n              />\r\n            </div>\r\n            <div className=\"header-contents-details\">\r\n              <div className=\"header-details-above\">\r\n                <h1 className=\"above-title\">\r\n                  {state.title} ({state.year})\r\n                </h1>\r\n                <div className=\"header-year-genres\">\r\n                  <div>-Genres</div>\r\n                  <div\r\n                    className=\"header-genres\"\r\n                    style={{ paddingLeft: \"1rem\" }}\r\n                  >\r\n                    {state.genres.map((item, index) => (\r\n                      <p key={index}>{item}</p>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"header-details-Below\">\r\n                <div\r\n                  className=\"header-runtime-block\"\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    gap: \"0.5rem\",\r\n                  }}\r\n                >\r\n                  <div className=\"header-runtime-title\">-Total Runtime</div>\r\n                  <div\r\n                    className=\"header-runtime-total\"\r\n                    style={{ paddingLeft: \"1rem\", paddingBottom: \"0.5rem\" }}\r\n                  >\r\n                    {state.runtime === 0 ? \"none\" : `${state.runtime} Hours`}\r\n                  </div>\r\n                </div>\r\n                <div className=\"header-details-average\">\r\n                  <div style={{ marginBottom: \"1rem\" }}>-Rating</div>\r\n                  <div\r\n                    style={{\r\n                      paddingLeft: \"1rem\",\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={faStar}\r\n                      style={{ color: \"#f7cf1e\" }}\r\n                    />\r\n                    {state.rating}\r\n                  </div>\r\n                </div>\r\n                <div className=\"header-details-stars\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"content\">\r\n          <div className=\"content-wrap\">\r\n            <div className=\"content-description\">\r\n              <h1\r\n                style={{\r\n                  borderBottom: \"1px solid black\",\r\n                  paddingBottom: \"0.5rem\",\r\n                }}\r\n              >\r\n                Description\r\n              </h1>\r\n            </div>\r\n            <p>{state.description === \"\" ? \"none\" : state.description}</p>\r\n          </div>\r\n        </section>\r\n      </Main>\r\n    </>\r\n  );\r\n};\r\nconst Main = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: white;\r\n  align-items: center;\r\n  .header-block {\r\n    padding-top: 6em;\r\n    padding-bottom: 3em;\r\n  }\r\n\r\n  .header-contents {\r\n    display: flex;\r\n    margin: 0 auto;\r\n    padding-left: 10rem;\r\n    background-color: #181818;\r\n  }\r\n  .above-title {\r\n    border-bottom: 1px solid white;\r\n    margin-top: 4rem;\r\n    font-size: 2.5rem;\r\n    padding-bottom: 0.5rem;\r\n  }\r\n\r\n  .header-contents-details {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 50%;\r\n    justify-content: space-between;\r\n    margin-left: 6rem;\r\n    padding-bottom: 3rem;\r\n  }\r\n\r\n  .header-year-genres {\r\n    display: flex;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n  }\r\n\r\n  .header-genres {\r\n    display: flex;\r\n    gap: 1rem;\r\n  }\r\n  .content {\r\n    background-color: #9e9e9e;\r\n    color: #181818;\r\n    font-weight: bold;\r\n    padding-top: 0;\r\n  }\r\n  .content-description {\r\n    padding-top: 1.5rem;\r\n  }\r\n  .content-wrap {\r\n    padding-right: 2rem;\r\n    padding-left: 2rem;\r\n    padding-bottom: 10rem;\r\n  }\r\n  .header-details-Below {\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n  }\r\n  /*align-items는 justify와는 반대로 세로를 기준으로 정렬함*/\r\n\r\n  .poster-img {\r\n    width: 20rem;\r\n    border: 1px solid none;\r\n    border-radius: 5px;\r\n  }\r\n  ${media.xlarge} {\r\n    .header-block {\r\n      width: 1440px;\r\n    }\r\n    .content {\r\n      width: 1440px;\r\n    }\r\n    .header-contents {\r\n      padding-left: 10rem;\r\n    }\r\n  }\r\n  ${media.large} {\r\n    .header-block {\r\n      width: 1024px;\r\n    }\r\n    .header-contents {\r\n      padding-left: 5rem;\r\n    }\r\n    .content {\r\n      width: 1024px;\r\n    }\r\n    .poster-img {\r\n      width: 20rem;\r\n    }\r\n  }\r\n  ${media.medium} {\r\n    .header-block {\r\n      width: 768px;\r\n    }\r\n    .header-contents {\r\n      padding-left: 2rem;\r\n    }\r\n    .content {\r\n      width: 768px;\r\n    }\r\n    .header-contents-details {\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 50%;\r\n      justify-content: space-between;\r\n      margin-left: 2rem;\r\n      padding-bottom: 3rem;\r\n    }\r\n  }\r\n\r\n  ${media.small} {\r\n    flex-direction: column;\r\n    width: 100%;\r\n    align-items: center;\r\n    .header-block {\r\n      width: 425px;\r\n    }\r\n    .header-contents {\r\n      padding-left: 0;\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 100%;\r\n    }\r\n    .content {\r\n      width: 425px;\r\n    }\r\n    .thumnail-block {\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n\r\n    .header-contents-details {\r\n      display: flex;\r\n      width: 80%;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n      margin-left: 4rem;\r\n      padding-bottom: 1rem;\r\n    }\r\n\r\n    \r\n    .above-title {\r\n      margin-top: 2rem;\r\n      margin-right: 0.5rem;\r\n      font-size: 1.75rem;\r\n    }\r\n    .header-year-genres {\r\n      font-size: 1.25rem;\r\n    }\r\n    .header-details-Below {\r\n      font-size: 1.25rem;\r\n    }\r\n    .content-description {\r\n      padding-top: 0.5rem;\r\n    }\r\n  }\r\n  ${media.xsmall} {\r\n    .header-block {\r\n      width: 375px;\r\n    }\r\n    .header-contents {\r\n      padding-left: 0;\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 100%;\r\n    }\r\n    .content {\r\n      width: 375px;\r\n    }\r\n    .thumnail-block {\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n\r\n    .header-contents-details {\r\n      display: flex;\r\n      width: 80%;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n      margin-left: 2rem;\r\n      padding-bottom: 1rem;\r\n    }\r\n\r\n    .above-title {\r\n      margin-top: 2rem;\r\n      margin-right: 0.5rem;\r\n      font-size: 1.75rem;\r\n    }\r\n    .header-year-genres {\r\n      font-size: 1.25rem;\r\n    }\r\n    .header-details-Below {\r\n      font-size: 1.25rem;\r\n    }\r\n    .content-description {\r\n      padding-top: 0.5rem;\r\n    }\r\n  }\r\n  ${media.xxsmall} {\r\n    .header-block {\r\n      width: 320px;\r\n    }\r\n    .header-contents {\r\n      padding-left: 0;\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 100%;\r\n    }\r\n    .content {\r\n      width: 320px;\r\n    }\r\n    .thumnail-block {\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n\r\n    .header-contents-details {\r\n      display: flex;\r\n      width: 80%;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n      margin-left: 2rem;\r\n      padding-bottom: 1rem;\r\n    }\r\n\r\n    .above-title {\r\n      margin-top: 2rem;\r\n      margin-right: 0.5rem;\r\n      font-size: 1.75rem;\r\n    }\r\n    .header-year-genres {\r\n      font-size: 1.25rem;\r\n    }\r\n    .header-details-Below {\r\n      font-size: 1.25rem;\r\n    }\r\n    .content-description {\r\n      padding-top: 0.5rem;\r\n    }\r\n  }\r\n`;\r\nexport default Detail;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport media from \"../lib/media\";\r\nimport { fas, faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { yellow } from \"chalk\";\r\n\r\nconst Movie = ({\r\n  id,\r\n  title,\r\n  year,\r\n  genres,\r\n  rating,\r\n  summary,\r\n  poster,\r\n  description,\r\n  runtime,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Wraper\r\n        to={{\r\n          pathname: `/movie/${id}`,\r\n          state: {\r\n            title,\r\n            year,\r\n            genres,\r\n            rating,\r\n            summary,\r\n            poster,\r\n            description,\r\n            runtime,\r\n          },\r\n        }}\r\n      >\r\n        <div className=\"item-contents\">\r\n          <img src={poster} alt={title} />\r\n          <Content>\r\n            <Header>\r\n              <span style={{ fontSize: \"13px\" }}>\r\n                {title.slice(15) !== \"\"\r\n                  ? `${title.slice(0, 15)}...`\r\n                  : title.slice(0, 15)}\r\n              </span>\r\n              <span>{year}</span>\r\n              <span style={{ fontSize: \"13px\" }}>\r\n                <FontAwesomeIcon icon={faStar} style={{ color: \"#f7cf1e\" }} />\r\n                {rating}/10.0\r\n              </span>\r\n            </Header>\r\n          </Content>\r\n        </div>\r\n      </Wraper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Wraper = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid none;\r\n  border-radius: 5px;\r\n  span {\r\n    margin: 0;\r\n  }\r\n  img {\r\n    max-width: 100%;\r\n    border: 1px solid none;\r\n    border-radius: 5px;\r\n  }\r\n  .item-contents {\r\n    text-align: center;\r\n  }\r\n`;\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  p {\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n`;\r\nconst Header = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\n\r\nexport default Movie;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport media from \"../lib/media\";\r\n\r\nconst Pagination = ({\r\n  currentPage,\r\n  setCurrentPage,\r\n  postsPerPage,\r\n  setPostsPerPage,\r\n}) => {\r\n  const [pages, setPages] = useState([1, 2, 3, 4, 5]);\r\n  const [activeId, setActiveId] = useState(1);\r\n  const onClick = (e) => {\r\n    console.log(\"페이지네이션\");\r\n    setActiveId(parseInt(e.target.id));\r\n    setCurrentPage(parseInt(e.target.id));\r\n  };\r\n\r\n  const onPrevClick = () => {\r\n    console.log(\"prevClick\");\r\n    setPages(pages.map((item) => item - 5));\r\n  };\r\n  const onNextClick = () => {\r\n    console.log(\"nextClick\");\r\n    setPages(pages.map((item) => item + 5));\r\n  };\r\n\r\n  return (\r\n    <UlWrapper>\r\n      <Ul>\r\n        {pages[0] !== 1 && (\r\n          <button onClick={onPrevClick} className=\"ul-button\">\r\n            {\"<\"}\r\n          </button>\r\n        )}\r\n        {pages.map((item, index) => (\r\n          <button\r\n            key={index}\r\n            id={item}\r\n            onClick={onClick}\r\n            className={`ul-items ${activeId === item && \"p-actives\"}`}\r\n          >\r\n            {item}\r\n          </button>\r\n        ))}\r\n        <button onClick={onNextClick} className=\"ul-button\">\r\n          {\">\"}\r\n        </button>\r\n      </Ul>\r\n    </UlWrapper>\r\n  );\r\n};\r\n\r\nconst UlWrapper = styled.div`\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n  padding: 0;\r\n  width: fit-content;\r\n  .ul-button {\r\n    cursor: pointer;\r\n    background-color: #cac6bd;\r\n    border: none;\r\n    border: 1px solid #cac6bd;\r\n    color: #181818;\r\n  }\r\n\r\n  .ul-items {\r\n    cursor: pointer;\r\n    width: 30px;\r\n    background-color: #181818;\r\n    border: none;\r\n    border: 1px solid #cac6bd;\r\n    color: #cac6bd;\r\n  }\r\n\r\n  .p-actives {\r\n    background-color: #cac6bd;\r\n    color: #181818;\r\n  }\r\n\r\n  ${media.medium} {\r\n    margin-right: 0;\r\n  }\r\n\r\n  ${media.small} {\r\n    margin-right: 0;\r\n  }\r\n\r\n  ${media.xsmall} {\r\n    margin-right: 0;\r\n  }\r\n\r\n  ${media.xxsmall} {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nexport default Pagination;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Movie from \"../components/Movie\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport media from \"../lib/media\";\r\nimport \"./Home.css\";\r\n\r\nconst Home = () => {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage, setPostsPerPage] = useState(10);\r\n\r\n  const getData = async (currentPage) => {\r\n    const data = await axios.get(\r\n      `https://yts-proxy.now.sh/list_movies.json?sort_by=year&&page=${currentPage}`\r\n    );\r\n    console.log(data.data.data.movies);\r\n    setMovieList(data.data.data.movies);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData(currentPage);\r\n    return () => {\r\n      console.log(\"취소됨.\");\r\n    };\r\n  }, [currentPage]);\r\n  return (\r\n    <Wrapper>\r\n      {loading === true ? (\r\n        <span style={{ color: \"white\" }}>로딩중...</span>\r\n      ) : (\r\n        <div className=\"hi\">\r\n          <div className=\"top-rated\">Top Rated</div>\r\n          <div className=\"movies\">\r\n            {movieList.map((data) => (\r\n              <div className=\"movie-item\">\r\n                <Movie\r\n                  key={data.id}\r\n                  id={data.id}\r\n                  title={data.title}\r\n                  year={data.year}\r\n                  genres={data.genres}\r\n                  rating={data.rating}\r\n                  summary={data.summary}\r\n                  description={data.description_full}\r\n                  runtime={data.runtime}\r\n                  poster={data.large_cover_image}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            setCurrentPage={setCurrentPage}\r\n            postsPerPage={postsPerPage}\r\n            setPostsPerPage={setPostsPerPage}\r\n          />\r\n        </div>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  .movies {\r\n    padding-top: 0;\r\n  }\r\n  .top-rated {\r\n    color: white;\r\n    font-weight: bold;\r\n    border-bottom: 1px solid white;\r\n    padding-top: 4.5rem;\r\n    padding-bottom: 0.25rem;\r\n  }\r\n  ${media.xlarge} {\r\n    .movie-item {\r\n      margin: 1.25rem 2rem;\r\n      width: calc((100% - 20rem) / 5);\r\n    }\r\n  }\r\n  ${media.large} {\r\n    .movie-item {\r\n      margin: 1.25rem 2rem;\r\n      width: calc((100% - 16rem) / 4);\r\n    }\r\n  }\r\n\r\n  ${media.medium} {\r\n    .movies {\r\n      /* padding-left: 2.5%;\r\n      padding-right: 2.5%; */\r\n      padding-left: 0;\r\n      padding-right: 0;\r\n      gap: 2rem;\r\n    }\r\n\r\n    .movie-item {\r\n      margin: 1.25rem 2rem;\r\n      width: calc((100% - 16rem) / 3);\r\n    }\r\n  }\r\n  ${media.small} {\r\n    .movies {\r\n      gap: 1.5rem;\r\n    }\r\n\r\n    .movie-item {\r\n      margin: 1.25rem 2rem;\r\n      width: calc((100% - 9.5rem) / 2);\r\n    }\r\n\r\n    ${media.xsmall} {\r\n      .sidebar-mobile-tagmenu {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding-left: 1rem;\r\n        padding-right: 1rem;\r\n        height: 2rem;\r\n        align-items: center;\r\n      }\r\n      .movies {\r\n        gap: 0.45rem;\r\n      }\r\n\r\n      .movie-item {\r\n        margin: 1.25rem 2rem;\r\n        width: calc((100% - 1rem) / 3);\r\n      }\r\n    }\r\n    ${media.xxsmall} {\r\n      .sidebar-mobile-tagmenu {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding-left: 1rem;\r\n        padding-right: 1rem;\r\n        height: 2rem;\r\n        align-items: center;\r\n      }\r\n      .movies {\r\n        padding-left: 2%;\r\n        padding-right: 2%;\r\n        gap: 5px;\r\n      }\r\n      .movie-item {\r\n        margin: 1.25rem 2rem;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Home;\r\n","const GenreList = [\r\n  {\r\n    id: 1,\r\n    name: \"ALL\",\r\n    value: \"all\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"COMEDY\",\r\n    value: \"comedy\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"SCI-FI\",\r\n    value: \"sci-fi\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"HORROR\",\r\n    value: \"horror\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"ROMANCE\",\r\n    value: \"romance\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"ACTION\",\r\n    value: \"action\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"THRILLER\",\r\n    value: \"thriller\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"DRAMA\",\r\n    value: \"drama\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"MYSTERY\",\r\n    value: \"mystery\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"CRIME\",\r\n    value: \"crime\",\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"ANIMATION\",\r\n    value: \"animation\",\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"ADVENTURE\",\r\n    value: \"adventure\",\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"FANTASY\",\r\n    value: \"fantasy\",\r\n  },\r\n];\r\n\r\nexport default GenreList;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Movie from \"../components/Movie\";\r\nimport GenreList from \"../lib/GenreList\";\r\nimport \"./Home.css\";\r\nimport media from \"../lib/media\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Pagination from \"../components/Pagination\";\r\n\r\nconst Genres = () => {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [genresName, setGenresName] = useState(\"all\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeId, setActiveId] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage, setPostsPerPage] = useState(10);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const onClick = (e) => {\r\n    // console.log(e.target.attributes.getNamedItem(\"name\").value);\r\n    // console.log(e.target.getAttribute(\"name\"));\r\n    //input button태그와 다르게 e.target.name으로 접근 안됨 위에 두 방식으로도 가능\r\n\r\n    setLoading(true);\r\n    setActiveId(parseInt(e.target.id));\r\n    setGenresName(e.target.name);\r\n    // setActiveId(parseInt(e.target.getAttribute(\"id\"))); 특수한 경우에만 getAttributes쓸것.\r\n    // setGenresName(e.target.getAttribute(\"name\"));\r\n    // console.log(e.target.getAttribute(\"name\"));\r\n    //컴포넌트가 리렌더링되어 렌더링이 끝나지 않을 때 null값을 반환하는 이슈가 있음 <- 정확하지않음\r\n  };\r\n\r\n  const onClickToggle = () => {\r\n    setToggle((prev) => !prev);\r\n    console.log(\"토글!\", toggle);\r\n  };\r\n\r\n  const getData = async (genresName, currentPage) => {\r\n    if (genresName === null) {\r\n      return;\r\n    }\r\n    const genresData = await axios.get(\r\n      `https://yts-proxy.now.sh/list_movies.json?genre=${genresName}&page=${currentPage}`\r\n    );\r\n    console.log(genresData.data.data.movies);\r\n    setMovieList(genresData.data.data.movies);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData(genresName, currentPage);\r\n    return () => {\r\n      console.log(\"취소됨.\");\r\n    };\r\n  }, [genresName, currentPage]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebar-mobile-tagmenu\">\r\n          <div className=\"sidebar-mobile-name\">태그</div>\r\n          <div className=\"sidebar-mobile-hamburger\">\r\n            <FontAwesomeIcon icon={faBars} onClick={onClickToggle} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={`sidebar-tag ${\r\n            toggle === true ? \"show-tag-menu\" : \"hide-tag-menu\"\r\n          }`}\r\n        >\r\n          {GenreList.map((item, index) => {\r\n            return (\r\n              <button\r\n                key={index}\r\n                id={index}\r\n                name={item.value}\r\n                className={`tag-box ${activeId === index && \"actives\"}`}\r\n                onClick={onClick}\r\n              >\r\n                {item.name}\r\n                {/* <p className=\"tag-box-contents\">{item.name}</p> */}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"hi\">\r\n          <div className=\"top-rated\">{genresName.toUpperCase()}</div>\r\n          {loading === true ? (\r\n            \"\"\r\n          ) : (\r\n            <div className=\"movies\">\r\n              {movieList.map((data) => (\r\n                <div className=\"movie-item\">\r\n                  <Movie\r\n                    key={data.id}\r\n                    id={data.id}\r\n                    title={data.title}\r\n                    year={data.year}\r\n                    genres={data.genres}\r\n                    rating={data.rating}\r\n                    summary={data.summary}\r\n                    poster={data.large_cover_image}\r\n                    description={data.description_full}\r\n                    runtime={data.runtime}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            setCurrentPage={setCurrentPage}\r\n            postsPerPage={postsPerPage}\r\n            setPostsPerPage={setPostsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  .top-rated {\r\n    color: white;\r\n    font-weight: bold;\r\n    border-bottom: 1px solid white;\r\n    padding-top: 4.5rem;\r\n    padding-bottom: 0.25rem;\r\n  }\r\n  .sidebar {\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 1.5rem;\r\n    margin-top: 3.5rem;\r\n  }\r\n  .sidebar-mobile-tagmenu {\r\n    background-color: #242424;\r\n    border: 1px solid #242424;\r\n    z-index: 4;\r\n  }\r\n\r\n  .sidebar-tag {\r\n    display: flex;\r\n    text-align: start;\r\n    flex-direction: column;\r\n    z-index: 1;\r\n  }\r\n  .tag-box {\r\n    width: 10rem;\r\n    /* height: calc(100% / 7); */\r\n\r\n    height: 2rem;\r\n    font-weight: 1000;\r\n    background-color: #3d3d3d;\r\n    border: 1px solid #3d3d3d;\r\n  }\r\n  .tag-box:hover {\r\n    padding-left: 0;\r\n    transition: all 0.4s;\r\n    background-color: #555555;\r\n    color: #cc8330;\r\n  }\r\n\r\n  .tag-box-contents {\r\n    padding-left: 2rem;\r\n  }\r\n\r\n  .hi {\r\n    margin-left: 10rem;\r\n  }\r\n\r\n  .actives {\r\n    background-color: #cc8330;\r\n  }\r\n\r\n  ${media.xlarge} {\r\n    .top-rated {\r\n      margin-left: 3rem;\r\n      width: 86%;\r\n    }\r\n    .sidebar-mobile-tagmenu {\r\n      display: none;\r\n    }\r\n    .movie-item {\r\n      margin: 1.25rem 2rem;\r\n      width: calc((100% - 16rem) / 6);\r\n    }\r\n  }\r\n  ${media.large} {\r\n    .top-rated {\r\n      margin-left: 3rem;\r\n      width: 89%;\r\n    }\r\n    .sidebar-mobile-tagmenu {\r\n      display: none;\r\n    }\r\n    .movie-item {\r\n      margin: 1.25rem 2rem;\r\n      width: calc((100% - 16rem) / 4);\r\n    }\r\n  }\r\n\r\n  ${media.medium} {\r\n    .top-rated {\r\n      padding-top: 5.5rem;\r\n      margin-left: 1.5rem;\r\n      width: 94%;\r\n    }\r\n    .sidebar {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    .sidebar-mobile-tagmenu {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      padding-left: 1rem;\r\n      padding-right: 1rem;\r\n      height: 2rem;\r\n      align-items: center;\r\n    }\r\n    .sidebar-tag {\r\n      flex-direction: row;\r\n      flex-wrap: wrap;\r\n    }\r\n    .hide-tag-menu {\r\n      transition: transform 0.5s ease-in;\r\n      transform: translateY(-16rem);\r\n    }\r\n    .show-tag-menu {\r\n      transition: transform 0.5s;\r\n      transform: translateY(0rem);\r\n    }\r\n    .tag-box {\r\n      width: 50%;\r\n    }\r\n    .hi {\r\n      margin-left: 0;\r\n    }\r\n    .movies {\r\n      /* padding-left: 2.5%;\r\n      padding-right: 2.5%; */\r\n      padding-left: 0;\r\n      padding-right: 0;\r\n      gap: 2rem;\r\n    }\r\n\r\n    .movie-item {\r\n      margin: 1.25rem 2rem;\r\n      width: calc((100% - 5.5rem) / 4);\r\n    }\r\n  }\r\n  ${media.small} {\r\n    .top-rated {\r\n      padding-top: 5.5rem;\r\n      margin-left: 1.5rem;\r\n      width: 90%;\r\n    }\r\n    .movies {\r\n      gap: 1.5rem;\r\n    }\r\n\r\n    .movie-item {\r\n      margin: 1.25rem 2rem;\r\n      width: calc((100% - 1rem) / 3);\r\n    }\r\n    .hide-tag-menu {\r\n      transition: transform 0.5s ease-in;\r\n      transform: translateY(-16rem);\r\n    }\r\n    .show-tag-menu {\r\n      transition: transform 0.5s;\r\n      transform: translateY(0rem);\r\n    }\r\n\r\n    ${media.xsmall} {\r\n      .top-rated {\r\n        padding-top: 5.5rem;\r\n        margin-left: 1.5rem;\r\n        width: 90%;\r\n      }\r\n      .sidebar-mobile-tagmenu {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding-left: 1rem;\r\n        padding-right: 1rem;\r\n        height: 2rem;\r\n        align-items: center;\r\n      }\r\n      .hide-tag-menu {\r\n        transition: transform 0.5s ease-in;\r\n        transform: translateY(-16rem);\r\n      }\r\n      .show-tag-menu {\r\n        transition: transform 0.5s;\r\n        transform: translateY(0rem);\r\n      }\r\n      .movies {\r\n        gap: 0.45rem;\r\n      }\r\n\r\n      .movie-item {\r\n        margin: 1.25rem 2rem;\r\n        width: calc((100% - 1rem) / 3);\r\n      }\r\n    }\r\n    ${media.xxsmall} {\r\n      .top-rated {\r\n        padding-top: 5.5rem;\r\n        margin-left: 1.5rem;\r\n        width: 85%;\r\n      }\r\n      .sidebar-mobile-tagmenu {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding-left: 1rem;\r\n        padding-right: 1rem;\r\n        height: 2rem;\r\n        align-items: center;\r\n      }\r\n      .hide-tag-menu {\r\n        transition: transform 0.5s ease-in;\r\n        transform: translateY(-16rem);\r\n      }\r\n      .show-tag-menu {\r\n        transition: transform 0.5s;\r\n        transform: translateY(0rem);\r\n      }\r\n      .movies {\r\n        padding-left: 2%;\r\n        padding-right: 2%;\r\n        gap: 5px;\r\n      }\r\n      .movie-item {\r\n        margin: 1.25rem 2rem;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default React.memo(Genres);\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport media from \"../lib/media\";\r\nimport \"./Navigation.css\";\r\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = () => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  const navbarData = [\r\n    {\r\n      name: \"New\",\r\n      path: \"/\",\r\n    },\r\n    {\r\n      name: \"Rating\",\r\n      path: \"/rating\",\r\n    },\r\n    {\r\n      name: \"Genres\",\r\n      path: \"/genres\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <ul className=\"navbar-menu\">\r\n        {navbarData.map((item, index) => (\r\n          <li\r\n            key={index}\r\n            className=\"navbar-menu-item\"\r\n            style={{ display: \"block\" }}\r\n          >\r\n            <NavbarItems\r\n              activeClassName=\"active\"\r\n              exact={item.name === \"New\"}\r\n              //exact 안쓰면 New카테고리가 색이 고정됨\r\n              //https://velog.io/@ksh4820/React-NavLink\r\n              to={item.path}\r\n            >\r\n              {item.name}\r\n            </NavbarItems>\r\n          </li>\r\n        ))}\r\n        {/* <li className=\"navbar-menu-item-option\">\r\n          <Link to=\"/option\">\r\n            <FontAwesomeIcon icon={faCog} />\r\n          </Link>\r\n        </li> */}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst NavbarItems = styled(NavLink)`\r\n  font-size: 1.125rem;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  white-space: pre;\r\n  text-decoration: none;\r\n  color: inherit;\r\n  padding-bottom: 0.25rem;\r\n  &:hover {\r\n    color: #495057;\r\n  }\r\n  &.active {\r\n    font-weight: 600;\r\n    border-bottom: 2px solid #cc8330;\r\n    color: #cc8330;\r\n    &:hover {\r\n      color: #b66810;\r\n    }\r\n  }\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\n\r\nexport const NavItemMenu = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  text-align: center;\r\n  ${media.small} {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const NavItem = styled(Link)`\r\n  text-align: center;\r\n  font-family: \"Malgun Gothic\";\r\n  font-weight: 900;\r\n  text-decoration: none;\r\n  padding: 8px 12px;\r\n  color: white;\r\n  &:hover {\r\n    background-color: #d49466;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  ${media.small} {\r\n    justify-content: center;\r\n    width: 100%;\r\n    padding: 0px;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    display: ${(props) => (props.clickbtn === \"false\" ? \"none\" : \"flex\")};\r\n  }\r\n`;\r\n\r\nexport const NavLinks = styled.div`\r\n  color: white;\r\n  .sns-icon {\r\n    padding-top: 14px;\r\n    padding-right: 12px;\r\n  }\r\n  ${media.small} {\r\n    display: ${(props) => (props.clickbtn === \"false\" ? \"none\" : \"block\")};\r\n  }\r\n`;\r\n\r\nexport const ToggleBtn = styled.div`\r\n  display: none;\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 32px;\r\n  font-size: 24px;\r\n  color: black;\r\n  ${media.small} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const NavbarItemsBlock = styled.div`\r\n  display: flex;\r\n  flex: 1.75 1 auto;\r\n  justify-content: space-between;\r\n\r\n  ${media.small} {\r\n    justify-content: none;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport default Navigation;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Movie from \"../components/Movie\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport media from \"../lib/media\";\r\nimport \"./Home.css\";\r\n\r\nconst Rating = () => {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage, setPostsPerPage] = useState(10);\r\n\r\n  const getData = async (currentPage) => {\r\n    const data = await axios.get(\r\n      `https://yts-proxy.now.sh/list_movies.json?sort_by=rating&page=${currentPage}`\r\n    );\r\n    console.log(data.data.data.movies);\r\n    setMovieList(data.data.data.movies);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData(currentPage);\r\n    return () => {\r\n      console.log(\"취소됨.\");\r\n    };\r\n  }, [currentPage]);\r\n  return (\r\n    <Wrapper>\r\n      {loading === true ? (\r\n        <span style={{ color: \"white\" }}>로딩중...</span>\r\n      ) : (\r\n        <div className=\"hi\">\r\n          <div className=\"top-rated\">Top Rated</div>\r\n          <div className=\"movies\">\r\n            {movieList.map((data) => (\r\n              <div className=\"movie-item\">\r\n                <Movie\r\n                  key={data.id}\r\n                  id={data.id}\r\n                  title={data.title}\r\n                  year={data.year}\r\n                  genres={data.genres}\r\n                  rating={data.rating}\r\n                  summary={data.summary}\r\n                  description={data.description_full}\r\n                  runtime={data.runtime}\r\n                  poster={data.large_cover_image}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            setCurrentPage={setCurrentPage}\r\n            postsPerPage={postsPerPage}\r\n            setPostsPerPage={setPostsPerPage}\r\n          />\r\n        </div>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\nconst Wrapper = styled.div`\r\n  .top-rated {\r\n    color: white;\r\n    font-weight: bold;\r\n    border-bottom: 1px solid white;\r\n    padding-top: 4.5rem;\r\n    padding-bottom: 0.25rem;\r\n  }\r\n  ${media.xlarge} {\r\n    .top-rated {\r\n      margin-left: 3rem;\r\n      width: 93%;\r\n    }\r\n    .movie-item {\r\n      margin: 1.25rem 2rem;\r\n      width: calc((100% - 20rem) / 5);\r\n    }\r\n  }\r\n  ${media.large} {\r\n    .top-rated {\r\n      margin-left: 3rem;\r\n      width: 93%;\r\n    }\r\n    .movie-item {\r\n      margin: 1.25rem 2rem;\r\n      width: calc((100% - 16rem) / 4);\r\n    }\r\n  }\r\n\r\n  ${media.medium} {\r\n    .top-rated {\r\n      margin-left: 1.5rem;\r\n      width: 94%;\r\n    }\r\n    .movies {\r\n      /* padding-left: 2.5%;\r\n    padding-right: 2.5%; */\r\n      padding-left: 0;\r\n      padding-right: 0;\r\n      gap: 2rem;\r\n    }\r\n\r\n    .movie-item {\r\n      margin: 1.25rem 2rem;\r\n      width: calc((100% - 16rem) / 3);\r\n    }\r\n  }\r\n  ${media.small} {\r\n    .top-rated {\r\n      margin-left: 1.5rem;\r\n      width: 90%;\r\n    }\r\n    .movies {\r\n      gap: 1.5rem;\r\n    }\r\n\r\n    .movie-item {\r\n      margin: 1.25rem 2rem;\r\n      width: calc((100% - 9.5rem) / 2);\r\n    }\r\n\r\n    ${media.xsmall} {\r\n      .top-rated {\r\n        margin-left: 1.5rem;\r\n        width: 90%;\r\n      }\r\n      .sidebar-mobile-tagmenu {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding-left: 1rem;\r\n        padding-right: 1rem;\r\n        height: 2rem;\r\n        align-items: center;\r\n      }\r\n      .movies {\r\n        gap: 0.45rem;\r\n      }\r\n\r\n      .movie-item {\r\n        margin: 1.25rem 2rem;\r\n        width: calc((100% - 1rem) / 3);\r\n      }\r\n    }\r\n    ${media.xxsmall} {\r\n      .top-rated {\r\n        margin-left: 1.5rem;\r\n        width: 86%;\r\n      }\r\n      .sidebar-mobile-tagmenu {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding-left: 1rem;\r\n        padding-right: 1rem;\r\n        height: 2rem;\r\n        align-items: center;\r\n      }\r\n      .movies {\r\n        padding-left: 2%;\r\n        padding-right: 2%;\r\n        gap: 5px;\r\n      }\r\n      .movie-item {\r\n        margin: 1.25rem 2rem;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Rating;\r\n","import { BrowserRouter, Route } from \"react-router-dom\";\nimport { createGlobalStyle } from \"styled-components\";\nimport \"./App.css\";\nimport Detail from \"./routes/Detail\";\nimport Home from \"./routes/Home\";\nimport Genres from \"./routes/Genres\";\nimport Rating from \"./routes/Rating\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <GlobalStyled />\n      <Navigation />\n      <Route path=\"/\" component={Home} exact={true} />\n      <Route path=\"/rating\" component={Rating} />\n      <Route path=\"/genres\" component={Genres} />\n      <Route path=\"/option\" component={Home} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </BrowserRouter>\n  );\n}\n\nconst GlobalStyled = createGlobalStyle`\nhtml , body , #root{\n  /* height:100%; */\n  background: #181818;\n  /* #121212 */\n  font-family:'Roboto';\n}\na, a:link, a:visited , a:hover , a:focus{\n  text-decoration:none;\n  color:unset\n}\n`;\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}